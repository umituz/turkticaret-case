{
  "info": {
    "_postman_id": "products-filters-collection",
    "name": "Products - Filters",
    "description": "Simple product filtering examples. Supports: page, limit, category_uuid, min_price, max_price, search (name+description)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Filter by Category",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{base_url}}/products?category_uuid={{category_uuid}}",
          "host": ["{{base_url}}"],
          "path": ["products"],
          "query": [
            {"key": "category_uuid", "value": "{{category_uuid}}"}
          ]
        },
        "description": "Get products from a specific category"
      }
    },
    {
      "name": "Filter by Price Range",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{base_url}}/products?min_price=10000&max_price=50000",
          "host": ["{{base_url}}"],
          "path": ["products"],
          "query": [
            {"key": "min_price", "value": "10000"},
            {"key": "max_price", "value": "50000"}
          ]
        },
        "description": "Get products within price range (100-500 TL in cents)"
      }
    },
    {
      "name": "Search Products",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{base_url}}/products?search=phone",
          "host": ["{{base_url}}"],
          "path": ["products"],
          "query": [
            {"key": "search", "value": "phone"}
          ]
        },
        "description": "Search products by name and description"
      }
    },
    {
      "name": "Pagination Example",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{base_url}}/products?page=2&per_page={{per_page}}",
          "host": ["{{base_url}}"],
          "path": ["products"],
          "query": [
            {"key": "page", "value": "2"},
            {"key": "per_page", "value": "{{per_page}}"}
          ]
        },
        "description": "Get second page using centralized per_page parameter ({{per_page}} = 20)"
      }
    },
    {
      "name": "Combined Filters Example",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{base_url}}/products?category_uuid={{category_uuid}}&min_price=5000&max_price=100000&search={{search}}&page={{page}}&per_page={{per_page}}",
          "host": ["{{base_url}}"],
          "path": ["products"],
          "query": [
            {"key": "category_uuid", "value": "{{category_uuid}}"},
            {"key": "min_price", "value": "5000"},
            {"key": "max_price", "value": "100000"},
            {"key": "search", "value": "{{search}}"},
            {"key": "page", "value": "{{page}}"},
            {"key": "per_page", "value": "{{per_page}}"}
          ]
        },
        "description": "Multiple filters combined: category, price range, search, and pagination"
      }
    },
    {
      "name": "Filter by Featured Products",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{base_url}}/products?isFeatured=true&per_page={{per_page}}&page={{page}}",
          "host": ["{{base_url}}"],
          "path": ["products"],
          "query": [
            {"key": "isFeatured", "value": "true", "description": "Filter featured products"},
            {"key": "per_page", "value": "{{per_page}}", "description": "Items per page"},
            {"key": "page", "value": "{{page}}", "description": "Page number"}
          ]
        },
        "description": "Get all featured products"
      }
    }
  ]
}